While this implementation of the fortuna random number generator is
complete, I intend to polish and extend the package over time.  My
aims are to make the user interface as intuitive as possible and to
reduce the probablity of accidentially using the package in an unsafe
way.  This file lists a possible directions for future work.

- Consider the possibility of using file-locking on the seed file to
  prevent the user from accidentially sharing the seed file between
  concurrently running instances of the generator.

- Following Ferguson and Schneier's description of the algorithm, on
  shutdown all entropy pools are simply discarded.  It seems like a
  good idea to fold the into the generator state instead before
  writing the final seed file.  Is this really a good idea?  Is this
  worth deviating from the official algorithm for?

- Currently, the allocated source numbers for entropy sources wrap
  around modulo 256.  This may allow an attacker to route all entropy
  into the same source, by somehow allocating 255 fake-sources between
  every allocation of a real source.  Is this worth fixing somehow?

- Consider whether some of the recommendations of NIST Special
  Publication 800-90A [1] are worth implementing.  This includes, in
  particular, self-tests during operation.

    [1] http://csrc.nist.gov/publications/nistpubs/800-90A/SP800-90A.pdf
